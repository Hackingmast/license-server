{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file://E%3A/E%20Data/studybuddy-pro/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file://E%3A/E%20Data/studybuddy-pro/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file://E%3A/E%20Data/studybuddy-pro/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":["file://E%3A/E%20Data/studybuddy-pro/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 233, "column": 0}, "map": {"version":3,"sources":["file://E%3A/E%20Data/studybuddy-pro/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 386, "column": 0}, "map": {"version":3,"sources":["file://E%3A/E%20Data/studybuddy-pro/src/store/testConfigStore.ts"],"sourcesContent":["\"use client\";\n\nimport { create } from 'zustand';\nimport { persist, createJSONStorage } from 'zustand/middleware';\n\ninterface TestConfig {\n  timer: number; // in seconds\n  questionLimit: number;\n  passingPercentage: number;\n}\n\ninterface TestConfigState {\n  config: TestConfig;\n  setConfig: (newConfig: Partial<TestConfig>) => void;\n}\n\nconst initialConfig: TestConfig = {\n  timer: 600, // Default 10 minutes\n  questionLimit: 10,\n  passingPercentage: 70,\n};\n\nexport const useTestConfigStore = create<TestConfigState>()(\n  persist(\n    (set) => ({\n      config: initialConfig,\n      setConfig: (newConfig) =>\n        set((state) => ({ config: { ...state.config, ...newConfig } })),\n    }),\n    {\n      name: 'test-config-storage', // Unique name for storage\n      storage: createJSONStorage(() => sessionStorage), // Persist to sessionStorage\n    }\n  )\n);\n"],"names":[],"mappings":";;;AAEA;AACA;AAHA;;;AAgBA,MAAM,gBAA4B;IAChC,OAAO;IACP,eAAe;IACf,mBAAmB;AACrB;AAEO,MAAM,qBAAqB,CAAA,GAAA,wJAAA,CAAA,SAAM,AAAD,IACrC,CAAA,GAAA,6IAAA,CAAA,UAAO,AAAD,EACJ,CAAC,MAAQ,CAAC;QACR,QAAQ;QACR,WAAW,CAAC,YACV,IAAI,CAAC,QAAU,CAAC;oBAAE,QAAQ;wBAAE,GAAG,MAAM,MAAM;wBAAE,GAAG,SAAS;oBAAC;gBAAE,CAAC;IACjE,CAAC,GACD;IACE,MAAM;IACN,SAAS,CAAA,GAAA,6IAAA,CAAA,oBAAiB,AAAD,EAAE,IAAM;AACnC","debugId":null}},
    {"offset": {"line": 417, "column": 0}, "map": {"version":3,"sources":["file://E%3A/E%20Data/studybuddy-pro/src/store/userStore.ts"],"sourcesContent":["\n\"use client\";\n\nimport { create } from 'zustand';\nimport { persist, createJSONStorage } from 'zustand/middleware';\n\ninterface User {\n  rollNo: string;\n  name: string;\n  // cnic: string; // Removed CNIC\n}\n\ninterface UserState {\n  user: User | null;\n  setUser: (user: User | null) => void;\n  logout: () => void;\n}\n\nexport const useUserStore = create<UserState>()(\n  persist(\n    (set) => ({\n      user: null,\n      setUser: (user) => set({ user }),\n      logout: () => set({ user: null }),\n    }),\n    {\n      name: 'user-storage', // Name of the item in storage (must be unique)\n      storage: createJSONStorage(() => sessionStorage), // Persist to sessionStorage\n    }\n  )\n);\n"],"names":[],"mappings":";;;AAGA;AACA;AAHA;;;AAiBO,MAAM,eAAe,CAAA,GAAA,wJAAA,CAAA,SAAM,AAAD,IAC/B,CAAA,GAAA,6IAAA,CAAA,UAAO,AAAD,EACJ,CAAC,MAAQ,CAAC;QACR,MAAM;QACN,SAAS,CAAC,OAAS,IAAI;gBAAE;YAAK;QAC9B,QAAQ,IAAM,IAAI;gBAAE,MAAM;YAAK;IACjC,CAAC,GACD;IACE,MAAM;IACN,SAAS,CAAA,GAAA,6IAAA,CAAA,oBAAiB,AAAD,EAAE,IAAM;AACnC","debugId":null}},
    {"offset": {"line": 443, "column": 0}, "map": {"version":3,"sources":["file://E%3A/E%20Data/studybuddy-pro/src/store/questionStore.ts"],"sourcesContent":["\n\"use client\";\n\nimport { create } from 'zustand';\nimport type { Question } from '@/types/question';\n\n// Note: Questions are not persisted here, they should be loaded fresh\n// from the file each time the user configures a test.\n\ninterface QuestionState {\n  questions: Question[];\n  setQuestions: (questions: Question[]) => void;\n  clearQuestions: () => void;\n}\n\nexport const useQuestionStore = create<QuestionState>()(\n  (set) => ({\n    questions: [], // Initialize with an empty array\n    setQuestions: (questions) => set({ questions }),\n    clearQuestions: () => set({ questions: [] }),\n  }),\n);\n\n\n    "],"names":[],"mappings":";;;AAGA;AAFA;;AAcO,MAAM,mBAAmB,CAAA,GAAA,wJAAA,CAAA,SAAM,AAAD,IACnC,CAAC,MAAQ,CAAC;QACR,WAAW,EAAE;QACb,cAAc,CAAC,YAAc,IAAI;gBAAE;YAAU;QAC7C,gBAAgB,IAAM,IAAI;gBAAE,WAAW,EAAE;YAAC;IAC5C,CAAC","debugId":null}},
    {"offset": {"line": 472, "column": 0}, "map": {"version":3,"sources":["file://E%3A/E%20Data/studybuddy-pro/src/lib/questionParser.ts"],"sourcesContent":["\nimport type { Question } from '@/types/question';\nimport { v4 as uuidv4 } from 'uuid'; // Using uuid for unique IDs\n\n/**\n * Parses text content from a file into an array of Question objects.\n * Expected format per question block:\n * [Question Text (can be multi-line)]\n * 1) [Option 1 Text]\n * 2) [Option 2 Text]\n * ...\n * Answer: [Correct Option Number (e.g., 2)]\n * Explanation: [Explanation Text (can be multi-line)] (Optional)\n * (Separated by one or more empty lines)\n *\n * @param fileContent The string content read from the text file.\n * @returns An array of Question objects. Logs errors for invalid blocks.\n */\nexport const parseQuestionsFromFileContent = (fileContent: string): Question[] => {\n    const questions: Question[] = [];\n    const questionBlocks = fileContent.replace(/\\r\\n/g, '\\n').split(/\\n\\s*\\n+/).filter(block => block.trim());\n\n    questionBlocks.forEach((block, index) => {\n        const trimmedBlock = block.trim();\n        if (!trimmedBlock) return;\n\n        const allLines = trimmedBlock.split('\\n');\n        const blockNumber = index + 1;\n\n        let questionTextLines: string[] = [];\n        const optionsMap = new Map<string, string>(); // Stores option key (e.g., \"1\", \"2\") -> option text\n        let answerKey: string | null = null; // Stores the key of the correct answer (e.g., \"1\", \"2\")\n        let explanationLines: string[] = [];\n        let currentState: 'question' | 'options' | 'answer' | 'explanation' | 'unknown' = 'unknown';\n        let explanationFound = false;\n\n        try {\n            for (let i = 0; i < allLines.length; i++) {\n                const line = allLines[i];\n                const trimmedLine = line.trim();\n\n                if (!trimmedLine) continue;\n\n                const optionMatch = trimmedLine.match(/^(\\d+)\\)\\s*(.*)/); // Match numbered options\n                const answerMatch = trimmedLine.match(/^Answer:\\s*(\\d+)$/i); // Match \"Answer: [number]\"\n                const explanationMatch = trimmedLine.match(/^Explanation:/i);\n\n                if (explanationMatch) {\n                    explanationFound = true;\n                    currentState = 'explanation';\n                    const explanationTextAfterLabel = trimmedLine.substring(\"Explanation:\".length).trim();\n                    if (explanationTextAfterLabel) {\n                        explanationLines.push(explanationTextAfterLabel);\n                    }\n                    for (let j = i + 1; j < allLines.length; j++) {\n                        explanationLines.push(allLines[j]);\n                    }\n                    break;\n                } else if (answerMatch) {\n                    currentState = 'answer';\n                    answerKey = answerMatch[1]; // Store the number as a string key\n                } else if (optionMatch) {\n                    currentState = 'options';\n                    const key = optionMatch[1]; // The number (e.g., \"1\", \"2\")\n                    const text = optionMatch[2].trim();\n                    if (text) {\n                        optionsMap.set(key, text);\n                    } else {\n                        console.warn(`Skipping empty option ${key} in block ${blockNumber}`);\n                    }\n                } else {\n                    if (currentState === 'unknown' || currentState === 'question') {\n                        currentState = 'question';\n                        questionTextLines.push(line);\n                    } else if (currentState === 'options' || currentState === 'answer') {\n                        console.warn(`Ignoring unexpected line in block ${blockNumber} after options/answer but before Explanation: \"${line}\"`);\n                    }\n                }\n            }\n\n            const questionText = questionTextLines.join('\\n').trim();\n            const explanation = explanationFound ? explanationLines.join('\\n').trim() : (explanationLines.length > 0 ? explanationLines.join('\\n').trim() : null);\n            const options = Array.from(optionsMap.values());\n            const correctAnswerText = answerKey ? optionsMap.get(answerKey) : null;\n\n            const errors: string[] = [];\n            if (!questionText) errors.push(\"Missing question text.\");\n            if (optionsMap.size < 2) errors.push(\"Must have at least two valid options (e.g., 1) Text, 2) Text).\");\n            if (!answerKey) errors.push(\"Missing or invalid 'Answer:' line (e.g., Answer: 2). The answer key must be a number corresponding to an option.\");\n            if (answerKey && !correctAnswerText) errors.push(`The specified 'Answer' key ('${answerKey}') does not correspond to a valid option.`);\n            \n            if (errors.length > 0) {\n                console.error(`Parsing errors in block ${blockNumber}:`, errors);\n                console.error(\"Problematic Block Content:\\n---\\n\" + trimmedBlock + \"\\n---\");\n                return; \n            }\n\n            questions.push({\n                id: uuidv4(),\n                questionText: questionText!,\n                options: options,\n                correctAnswer: correctAnswerText!,\n                explanation: explanation,\n            });\n\n        } catch (error) {\n             console.error(`Unhandled error processing block ${blockNumber}:`, error);\n             console.error(\"Problematic Block Content:\\n---\\n\" + trimmedBlock + \"\\n---\");\n             return;\n        }\n    });\n\n    if (questions.length === 0 && questionBlocks.length > 0) {\n        console.warn(\"No valid questions could be parsed from the file content. Please check the format (Question, Options (e.g. 1) Text), Answer: (e.g. Answer: 1), Explanation: [optional]) and ensure blocks are separated by blank lines.\");\n    } else if (questions.length > 0) {\n        console.log(`Successfully parsed ${questions.length} questions.`);\n    }\n\n    return questions;\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 571, "column": 0}, "map": {"version":3,"sources":["file://E%3A/E%20Data/studybuddy-pro/src/components/ConfigureTest.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { z } from 'zod';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage, FormDescription } from '@/components/ui/form';\nimport { useTestConfigStore } from '@/store/testConfigStore';\nimport { useUserStore } from '@/store/userStore';\nimport { useQuestionStore } from '@/store/questionStore';\nimport { parseQuestionsFromFileContent } from '@/lib/questionParser';\nimport { Settings, Upload, Loader2 } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\n\n\nconst configSchema = z.object({\n  timer: z.coerce.number().int().positive({ message: 'Timer must be a positive number of minutes.' }).min(1, {message: 'Minimum time is 1 minute.'}),\n  questionLimit: z.coerce.number().int().positive({ message: 'Question limit must be a positive number.' }).min(1, {message: 'Minimum 1 question.'}),\n  passingPercentage: z.coerce.number().int().min(1, { message: 'Passing percentage must be between 1 and 100.' }).max(100, { message: 'Passing percentage must be between 1 and 100.' }),\n  questionFile: z.any().refine(\n    (val) => (typeof window === 'undefined' || val instanceof FileList),\n    \"Invalid file input\"\n  ),\n});\n\n\ntype ConfigFormData = z.infer<typeof configSchema>;\n\nexport function ConfigureTest() {\n  const router = useRouter();\n  const setConfig = useTestConfigStore((state) => state.setConfig);\n  const configStore = useTestConfigStore((state) => state.config); // Renamed to avoid conflict\n  const { user } = useUserStore();\n  const setQuestions = useQuestionStore((state) => state.setQuestions);\n  const clearQuestions = useQuestionStore((state) => state.clearQuestions);\n  const { toast } = useToast();\n  const [isLoading, setIsLoading] = useState(true);\n\n   React.useEffect(() => {\n    const unsubscribe = useUserStore.persist.onHydrate(() => {\n        console.log(\"[ConfigureTest] Zustand hydrated.\");\n        setIsLoading(false);\n        const currentUser = useUserStore.getState().user;\n        if (!currentUser) {\n            console.log(\"[ConfigureTest] No user found after hydration, redirecting.\");\n            toast({ title: \"Authentication Required\", description: \"Please log in first.\", variant: \"destructive\" });\n            router.push('/');\n        } else {\n             console.log(\"[ConfigureTest] User found after hydration:\", currentUser.name);\n        }\n    });\n\n     const timeoutId = setTimeout(() => {\n         if (!useUserStore.persist.hasHydrated()) {\n             console.log(\"[ConfigureTest] Zustand not hydrated yet, waiting...\");\n         } else {\n            setIsLoading(false);\n            const currentUser = useUserStore.getState().user;\n            if (!currentUser) {\n                console.log(\"[ConfigureTest] No user found (immediate check after hydration/timeout), redirecting.\");\n                toast({ title: \"Authentication Required\", description: \"Please log in first.\", variant: \"destructive\" });\n                router.push('/');\n            } else {\n                 console.log(\"[ConfigureTest] User found (immediate check after hydration/timeout):\", currentUser.name);\n            }\n         }\n     }, 100);\n\n\n    clearQuestions();\n\n    return () => {\n        unsubscribe();\n        clearTimeout(timeoutId);\n    }\n   // eslint-disable-next-line react-hooks/exhaustive-deps\n   }, [router, toast]);\n\n\n  const form = useForm<ConfigFormData>({\n    resolver: zodResolver(configSchema),\n    defaultValues: {\n      timer: configStore.timer / 60 || 10,\n      questionLimit: configStore.questionLimit || 10,\n      passingPercentage: configStore.passingPercentage || 70,\n      questionFile: undefined,\n    },\n  });\n\n  const onSubmit = async (data: ConfigFormData) => {\n     if (!(data.questionFile instanceof FileList) || data.questionFile.length !== 1) {\n         form.setError(\"questionFile\", { type: \"manual\", message: \"Question file is required.\" });\n         toast({ title: \"Error\", description: \"Please select one question file.\", variant: \"destructive\" });\n         return;\n     }\n     const file = data.questionFile[0];\n\n     if (file.type !== 'text/plain') {\n          form.setError(\"questionFile\", { type: \"manual\", message: \"File must be a .txt file.\" });\n         toast({ title: \"Invalid File Type\", description: \"File must be a .txt file.\", variant: \"destructive\" });\n         return;\n     }\n\n     const maxSize = 5 * 1024 * 1024; // 5MB\n     if (file.size > maxSize) {\n          form.setError(\"questionFile\", { type: \"manual\", message: `File size must be less than ${maxSize / 1024 / 1024}MB.` });\n         toast({ title: \"File Too Large\", description: `File size must be less than ${maxSize / 1024 / 1024}MB.`, variant: \"destructive\" });\n         return;\n     }\n\n     const reader = new FileReader();\n\n     reader.onload = async (e) => {\n         const content = e.target?.result as string;\n         if (!content) {\n             toast({ title: \"Error\", description: \"Could not read file content.\", variant: \"destructive\" });\n             return;\n         }\n\n         try {\n            const parsedQuestions = parseQuestionsFromFileContent(content);\n            if (parsedQuestions.length === 0) {\n                 toast({ title: \"No Questions Parsed\", description: \"No valid questions found in the file. Please check the format and ensure questions are separated by blank lines.\", variant: \"destructive\" });\n                clearQuestions();\n                 return;\n            }\n\n             const shuffled = parsedQuestions.sort(() => 0.5 - Math.random());\n             const actualQuestionLimit = Math.min(data.questionLimit, shuffled.length);\n             const limitedQuestions = shuffled.slice(0, actualQuestionLimit);\n\n\n             if (actualQuestionLimit < data.questionLimit) {\n                 toast({ title: \"Notice\", description: `Loaded only ${actualQuestionLimit} questions because the file contains fewer questions than requested (${data.questionLimit}).`, variant: \"default\"});\n             }\n\n\n             setQuestions(limitedQuestions);\n\n            setConfig({\n                timer: data.timer * 60,\n                questionLimit: actualQuestionLimit,\n                passingPercentage: data.passingPercentage,\n             });\n\n            toast({ title: \"Success\", description: `Loaded ${limitedQuestions.length} questions. Starting test.` });\n            router.push('/test');\n\n         } catch (error) {\n             console.error(\"Error parsing questions:\", error);\n             toast({ title: \"Error Parsing File\", description: `Failed to parse questions. Check format (Question, 1) Option, Answer: Number, Explanation: ...). Separate questions with blank lines. ${error instanceof Error ? error.message : ''}`, variant: \"destructive\", duration: 10000 });\n            clearQuestions();\n         }\n     };\n\n     reader.onerror = () => {\n         toast({ title: \"Error\", description: \"Failed to read the file.\", variant: \"destructive\" });\n     };\n\n     reader.readAsText(file);\n  };\n\n   if (isLoading) {\n       return (\n           <main className=\"flex min-h-screen flex-col items-center justify-center p-6 bg-background\">\n               <Card className=\"w-full max-w-lg shadow-lg\">\n                   <CardContent className=\"p-10 text-center flex flex-col items-center justify-center space-y-4\">\n                       <Loader2 className=\"w-12 h-12 animate-spin text-primary\" />\n                       <p className=\"text-muted-foreground\">Loading configuration...</p>\n                   </CardContent>\n               </Card>\n           </main>\n       );\n   }\n\n   if (!user) {\n     return <p>Redirecting to login...</p>;\n   }\n\n  const fileRef = form.register(\"questionFile\");\n\n\n  return (\n    <Card className=\"w-full max-w-lg shadow-lg\">\n      <CardHeader className=\"text-center\">\n        <div className=\"flex justify-center mb-4\">\n            <Settings className=\"w-12 h-12 text-primary\" />\n        </div>\n        <CardTitle className=\"text-2xl font-bold\">Configure Your Test</CardTitle>\n        <CardDescription>Welcome, {user?.name || 'User'}! Set up your study session.</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <FormField\n                control={form.control}\n                name=\"timer\"\n                render={({ field }) => (\n                    <FormItem>\n                    <FormLabel>Timer (min)</FormLabel>\n                    <FormControl>\n                        <Input type=\"number\" placeholder=\"e.g., 15\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                    </FormItem>\n                )}\n                />\n                <FormField\n                control={form.control}\n                name=\"questionLimit\"\n                render={({ field }) => (\n                    <FormItem>\n                    <FormLabel>Max Questions</FormLabel>\n                    <FormControl>\n                        <Input type=\"number\" placeholder=\"e.g., 20\" {...field} />\n                    </FormControl>\n                     <FormDescription className=\"text-xs\">Actual number may be lower if file has fewer questions.</FormDescription>\n                    <FormMessage />\n                    </FormItem>\n                )}\n                />\n                <FormField\n                control={form.control}\n                name=\"passingPercentage\"\n                render={({ field }) => (\n                    <FormItem>\n                    <FormLabel>Passing %</FormLabel>\n                    <FormControl>\n                        <Input type=\"number\" min=\"1\" max=\"100\" placeholder=\"e.g., 80\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                    </FormItem>\n                )}\n                />\n            </div>\n\n            <FormField\n                control={form.control}\n                name=\"questionFile\"\n                render={({ fieldState, formState }) => (\n                    <FormItem>\n                    <FormLabel>Question File (.txt)</FormLabel>\n                    <FormControl>\n                         <Input\n                            type=\"file\"\n                            accept=\".txt\"\n                            {...fileRef}\n                            className=\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n                        />\n                    </FormControl>\n                     <FormDescription className=\"flex items-center gap-1 text-xs\">\n                        <Upload className=\"w-3 h-3\" /> Upload a TXT file (max 5MB). Format: Question, 1) Option, Answer: Number, Explanation: (optional). Separate blocks with blank lines.\n                    </FormDescription>\n                    <FormMessage />\n                    </FormItem>\n                )}\n                />\n\n            <Button type=\"submit\" className=\"w-full\" disabled={form.formState.isSubmitting}>\n               {form.formState.isSubmitting ? 'Processing...' : 'Start Test'}\n            </Button>\n          </form>\n        </Form>\n      </CardContent>\n       <CardFooter className=\"text-center text-xs text-muted-foreground\">\n        <p>Customize your learning experience.</p>\n      </CardFooter>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}