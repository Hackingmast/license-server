{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/E%20Data/studybuddy-pro/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file://E%3A/E%20Data/studybuddy-pro/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file://E%3A/E%20Data/studybuddy-pro/src/components/ui/radio-group.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,6LAAC,6KAAA,CAAA,OAAwB;QACvB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;QAC3B,GAAG,KAAK;QACT,KAAK;;;;;;AAGX;;AACA,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4OACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,YAA6B;YAAC,WAAU;sBACvC,cAAA,6LAAC,yMAAA,CAAA,SAAM;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI1B;;AACA,eAAe,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":["file://E%3A/E%20Data/studybuddy-pro/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 286, "column": 0}, "map": {"version":3,"sources":["file://E%3A/E%20Data/studybuddy-pro/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 332, "column": 0}, "map": {"version":3,"sources":["file://E%3A/E%20Data/studybuddy-pro/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 484, "column": 0}, "map": {"version":3,"sources":["file://E%3A/E%20Data/studybuddy-pro/src/store/testConfigStore.ts"],"sourcesContent":["\"use client\";\n\nimport { create } from 'zustand';\nimport { persist, createJSONStorage } from 'zustand/middleware';\n\ninterface TestConfig {\n  timer: number; // in seconds\n  questionLimit: number;\n  passingPercentage: number;\n}\n\ninterface TestConfigState {\n  config: TestConfig;\n  setConfig: (newConfig: Partial<TestConfig>) => void;\n}\n\nconst initialConfig: TestConfig = {\n  timer: 600, // Default 10 minutes\n  questionLimit: 10,\n  passingPercentage: 70,\n};\n\nexport const useTestConfigStore = create<TestConfigState>()(\n  persist(\n    (set) => ({\n      config: initialConfig,\n      setConfig: (newConfig) =>\n        set((state) => ({ config: { ...state.config, ...newConfig } })),\n    }),\n    {\n      name: 'test-config-storage', // Unique name for storage\n      storage: createJSONStorage(() => sessionStorage), // Persist to sessionStorage\n    }\n  )\n);\n"],"names":[],"mappings":";;;AAEA;AACA;AAHA;;;AAgBA,MAAM,gBAA4B;IAChC,OAAO;IACP,eAAe;IACf,mBAAmB;AACrB;AAEO,MAAM,qBAAqB,CAAA,GAAA,2JAAA,CAAA,SAAM,AAAD,IACrC,CAAA,GAAA,gJAAA,CAAA,UAAO,AAAD,EACJ,CAAC,MAAQ,CAAC;QACR,QAAQ;QACR,WAAW,CAAC,YACV,IAAI,CAAC,QAAU,CAAC;oBAAE,QAAQ;wBAAE,GAAG,MAAM,MAAM;wBAAE,GAAG,SAAS;oBAAC;gBAAE,CAAC;IACjE,CAAC,GACD;IACE,MAAM;IACN,SAAS,CAAA,GAAA,gJAAA,CAAA,oBAAiB,AAAD,EAAE,IAAM;AACnC","debugId":null}},
    {"offset": {"line": 518, "column": 0}, "map": {"version":3,"sources":["file://E%3A/E%20Data/studybuddy-pro/src/store/userStore.ts"],"sourcesContent":["\n\"use client\";\n\nimport { create } from 'zustand';\nimport { persist, createJSONStorage } from 'zustand/middleware';\n\ninterface User {\n  rollNo: string;\n  name: string;\n  // cnic: string; // Removed CNIC\n}\n\ninterface UserState {\n  user: User | null;\n  setUser: (user: User | null) => void;\n  logout: () => void;\n}\n\nexport const useUserStore = create<UserState>()(\n  persist(\n    (set) => ({\n      user: null,\n      setUser: (user) => set({ user }),\n      logout: () => set({ user: null }),\n    }),\n    {\n      name: 'user-storage', // Name of the item in storage (must be unique)\n      storage: createJSONStorage(() => sessionStorage), // Persist to sessionStorage\n    }\n  )\n);\n"],"names":[],"mappings":";;;AAGA;AACA;AAHA;;;AAiBO,MAAM,eAAe,CAAA,GAAA,2JAAA,CAAA,SAAM,AAAD,IAC/B,CAAA,GAAA,gJAAA,CAAA,UAAO,AAAD,EACJ,CAAC,MAAQ,CAAC;QACR,MAAM;QACN,SAAS,CAAC,OAAS,IAAI;gBAAE;YAAK;QAC9B,QAAQ,IAAM,IAAI;gBAAE,MAAM;YAAK;IACjC,CAAC,GACD;IACE,MAAM;IACN,SAAS,CAAA,GAAA,gJAAA,CAAA,oBAAiB,AAAD,EAAE,IAAM;AACnC","debugId":null}},
    {"offset": {"line": 547, "column": 0}, "map": {"version":3,"sources":["file://E%3A/E%20Data/studybuddy-pro/src/store/questionStore.ts"],"sourcesContent":["\n\"use client\";\n\nimport { create } from 'zustand';\nimport type { Question } from '@/types/question';\n\n// Note: Questions are not persisted here, they should be loaded fresh\n// from the file each time the user configures a test.\n\ninterface QuestionState {\n  questions: Question[];\n  setQuestions: (questions: Question[]) => void;\n  clearQuestions: () => void;\n}\n\nexport const useQuestionStore = create<QuestionState>()(\n  (set) => ({\n    questions: [], // Initialize with an empty array\n    setQuestions: (questions) => set({ questions }),\n    clearQuestions: () => set({ questions: [] }),\n  }),\n);\n\n\n    "],"names":[],"mappings":";;;AAGA;AAFA;;AAcO,MAAM,mBAAmB,CAAA,GAAA,2JAAA,CAAA,SAAM,AAAD,IACnC,CAAC,MAAQ,CAAC;QACR,WAAW,EAAE;QACb,cAAc,CAAC,YAAc,IAAI;gBAAE;YAAU;QAC7C,gBAAgB,IAAM,IAAI;gBAAE,WAAW,EAAE;YAAC;IAC5C,CAAC","debugId":null}},
    {"offset": {"line": 571, "column": 0}, "map": {"version":3,"sources":["file://E%3A/E%20Data/studybuddy-pro/src/components/TestInterface.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect, useMemo, useCallback, useRef } from 'react';\nimport { useRouter } from 'next/navigation';\nimport * as Tone from 'tone';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';\nimport { Label } from '@/components/ui/label';\nimport { Progress } from '@/components/ui/progress';\nimport { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle } from \"@/components/ui/alert-dialog\";\nimport { useTestConfigStore } from '@/store/testConfigStore';\nimport { useUserStore } from '@/store/userStore';\nimport { useQuestionStore } from '@/store/questionStore'; // Import question store\nimport type { Question } from '@/types/question';\nimport { cn } from '@/lib/utils'; // Import cn utility\nimport { CheckCircle, XCircle, Smile, Frown, Clock, FileQuestion, Percent, Loader2, AlertTriangle, BookOpen } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\n\ntype AnswerStatus = 'correct' | 'incorrect' | 'unanswered';\ntype TestState = 'loading' | 'running' | 'paused' | 'finished' | 'reviewing' | 'error';\n\nexport function TestInterface() {\n  const router = useRouter();\n  const { config } = useTestConfigStore();\n  const { user } = useUserStore();\n  const { questions } = useQuestionStore(); // Get questions from the store\n  const { toast } = useToast();\n\n\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState<string | null>(null);\n  const [answers, setAnswers] = useState<Record<number, { answer: string; status: AnswerStatus }>>({});\n  const [timeLeft, setTimeLeft] = useState(config.timer || 0); // Initialize with config or 0\n  const [testState, setTestState] = useState<TestState>('loading'); // Start in loading state\n  const [showResultModal, setShowResultModal] = useState(false);\n  const [showExplanationModal, setShowExplanationModal] = useState(false);\n  const [isPassed, setIsPassed] = useState(false);\n  const [reviewIndex, setReviewIndex] = useState(0);\n  const [reviewStartTime, setReviewStartTime] = useState<number | null>(null);\n\n  const synth = useRef<Tone.Synth | null>(null);\n  const loop = useRef<Tone.Loop | null>(null);\n\n  // --- Initial Setup & Validation ---\n  useEffect(() => {\n    // 1. Check for user and basic config\n    if (!user) {\n        console.warn('User missing, redirecting to login.');\n        toast({ title: \"Authentication Required\", description: \"Please log in first.\", variant: \"destructive\" });\n        router.push('/');\n        return;\n    }\n    if (!config.timer || !config.questionLimit || !config.passingPercentage) {\n        console.warn('Configuration missing, redirecting to configure.');\n        toast({ title: \"Configuration Missing\", description: \"Please configure the test settings first.\", variant: \"destructive\" });\n        router.push('/configure');\n        return;\n    }\n\n    // 2. Check if questions are loaded from the store\n    if (questions.length === 0) {\n        console.warn('No questions found in store, redirecting to configure.');\n        toast({ title: \"No Questions Loaded\", description: \"Please upload a question file on the configuration page.\", variant: \"destructive\" });\n        router.push('/configure');\n        return; // Prevent further execution if no questions\n    }\n\n    // 3. If checks pass, set initial state\n    setTimeLeft(config.timer);\n    setTestState('running'); // Move to running state only after checks\n\n  }, [config, user, router, questions, toast]); // Add questions to dependency array\n\n\n  // --- Audio Setup ---\n  useEffect(() => {\n      // Initialize synth on component mount\n    const initializeAudio = async () => {\n        try {\n            await Tone.start(); // Required for audio context in browsers\n            synth.current = new Tone.Synth({\n                oscillator: { type: 'sine' },\n                envelope: { attack: 0.001, decay: 0.1, sustain: 0.01, release: 0.1 },\n                volume: -20 // Adjust volume as needed\n            }).toDestination();\n\n            loop.current = new Tone.Loop((time) => {\n            if (synth.current && testState === 'running' && timeLeft > 0) {\n                synth.current.triggerAttackRelease('C5', '16n', time); // Play a short 'C5' note\n            }\n            }, '1s').start(0); // Run every 1 second\n\n            Tone.Transport.start();\n        } catch (error) {\n            console.error(\"Failed to initialize audio:\", error);\n             toast({ title: \"Audio Error\", description: \"Could not initialize timer sound.\", variant:\"destructive\"});\n        }\n    };\n\n    // Only initialize audio if the test is actually running\n    if(testState === 'running') {\n         initializeAudio();\n    }\n\n\n    // Cleanup audio resources on unmount\n    return () => {\n      loop.current?.stop();\n      loop.current?.dispose();\n      synth.current?.dispose();\n       // Only stop transport if it was started\n       if (Tone.Transport.state === 'started') {\n            Tone.Transport.stop();\n            Tone.Transport.cancel(); // Clear any scheduled events\n       }\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [testState]); // Run audio setup when testState changes to 'running'\n\n\n  // --- Calculated Values ---\n  const currentQuestion = useMemo(() => questions[currentQuestionIndex], [questions, currentQuestionIndex]);\n  const totalQuestions = questions.length; // Now derived from the store's questions\n\n  const { correctAnswersCount, incorrectAnswers } = useMemo(() => {\n      let correct = 0;\n      const incorrect: (Question & { userAnswer?: string })[] = [];\n\n      questions.forEach((q, index) => {\n          const answerData = answers[index];\n          if (answerData) {\n              if (answerData.status === 'correct') {\n                  correct++;\n              } else if (answerData.status === 'incorrect') {\n                  incorrect.push({ ...q, userAnswer: answerData.answer });\n              }\n          }\n          // Unanswered questions are neither correct nor incorrect for counting purposes here\n      });\n      return { correctAnswersCount: correct, incorrectAnswers: incorrect };\n  }, [answers, questions]);\n\n\n  const scorePercentage = useMemo(() => {\n      // Calculate score based on total questions in the loaded set\n      return totalQuestions > 0 ? Math.round((correctAnswersCount / totalQuestions) * 100) : 0;\n  }, [correctAnswersCount, totalQuestions]);\n\n\n  // --- Test Finish Logic (triggered by timer or last question submission) ---\n   const finishTest = useCallback(() => {\n     console.log(\"Attempting to finish test. Current state:\", testState);\n     if (testState !== 'running') return; // Prevent multiple finishes\n\n     console.log(\"Finishing test...\");\n     setTestState('finished');\n     const finalScorePercentage = totalQuestions > 0 ? Math.round((correctAnswersCount / totalQuestions) * 100) : 0;\n     const passed = finalScorePercentage >= config.passingPercentage;\n     setIsPassed(passed);\n     setShowResultModal(true);\n      // Stop the timer sound explicitly when the test finishes\n     loop.current?.stop();\n     Tone.Transport.pause();\n   }, [testState, correctAnswersCount, totalQuestions, config.passingPercentage]);\n\n\n  // --- Timer Logic ---\n  useEffect(() => {\n    if (testState !== 'running' || timeLeft <= 0 || questions.length === 0) return;\n\n    const timerId = setInterval(() => {\n      setTimeLeft((prevTime) => {\n          const newTime = prevTime - 1;\n          if (newTime <= 0) {\n              clearInterval(timerId); // Stop interval when time reaches 0\n              // Use a flag to ensure finishTest is called only once from the timer\n              if (testState === 'running') {\n                  finishTest();\n              }\n              return 0;\n          }\n          return newTime;\n      });\n    }, 1000);\n\n    return () => clearInterval(timerId);\n  }, [testState, timeLeft, questions.length, finishTest]); // Dependencies\n\n\n  // --- Event Handlers ---\n  const handleAnswerSelect = (value: string) => {\n    setSelectedAnswer(value);\n  };\n\n  const handleSubmitAnswer = () => {\n    if (!selectedAnswer || !currentQuestion || testState !== 'running') return;\n\n    const isCorrect = selectedAnswer === currentQuestion.correctAnswer;\n    const status: AnswerStatus = isCorrect ? 'correct' : 'incorrect';\n\n    setAnswers(prev => ({\n      ...prev,\n      [currentQuestionIndex]: { answer: selectedAnswer, status: status }\n    }));\n\n    setSelectedAnswer(null); // Reset selection for next question\n\n    if (!isCorrect) {\n       setShowExplanationModal(true); // Show explanation immediately on wrong answer\n    } else {\n      // Move to next question or finish if last one\n       if (currentQuestionIndex < totalQuestions - 1) {\n         setCurrentQuestionIndex(prev => prev + 1);\n       } else {\n         finishTest();\n       }\n    }\n  };\n\n  const handleNextQuestion = () => {\n     setShowExplanationModal(false); // Close explanation modal\n     if (currentQuestionIndex < totalQuestions - 1) {\n        setCurrentQuestionIndex(prev => prev + 1);\n      } else {\n        finishTest(); // Finish if it was the last question\n      }\n  }\n\n   const startReview = () => {\n     setShowResultModal(false);\n     if (incorrectAnswers.length > 0) {\n       setTestState('reviewing');\n       setReviewIndex(0);\n       setReviewStartTime(Date.now());\n     } else {\n        // If no incorrect answers, navigate back to configuration\n        toast({ title: \"Excellent!\", description: \"No incorrect answers to review. Great job!\", duration: 5000});\n        router.push('/configure');\n     }\n   };\n\n    // --- Review Logic ---\n   useEffect(() => {\n    if (testState !== 'reviewing' || !reviewStartTime || incorrectAnswers.length === 0) return;\n\n    const reviewDuration = 30 * 60 * 1000; // 30 minutes in milliseconds\n    const reviewInterval = 15000; // Show each question for 15 seconds\n\n    const timerId = setInterval(() => {\n      const elapsedTime = Date.now() - reviewStartTime;\n      if (elapsedTime >= reviewDuration) {\n        setTestState('finished'); // End review after 30 mins\n        toast({title: \"Review Complete\", description: \"Review session finished.\"});\n        router.push('/configure'); // Or navigate elsewhere\n      } else {\n        // Cycle through incorrect questions\n        setReviewIndex(prev => (prev + 1) % incorrectAnswers.length);\n      }\n    }, reviewInterval);\n\n    return () => clearInterval(timerId);\n  }, [testState, reviewStartTime, incorrectAnswers, router, toast]);\n\n\n  // --- Rendering Logic ---\n\n   // Loading State\n   if (testState === 'loading') {\n       return (\n           <Card className=\"w-full max-w-2xl shadow-lg\">\n               <CardContent className=\"p-10 text-center flex flex-col items-center justify-center space-y-4\">\n                    <Loader2 className=\"w-12 h-12 animate-spin text-primary\" />\n                   <p className=\"text-muted-foreground\">Loading test setup...</p>\n               </CardContent>\n           </Card>\n       );\n   }\n\n   // Error State (e.g., if initial checks fail - although redirects handle most cases)\n   if (testState === 'error') {\n        return (\n            <Card className=\"w-full max-w-2xl shadow-lg border-destructive\">\n                <CardHeader className=\"text-center\">\n                    <AlertTriangle className=\"w-12 h-12 text-destructive mx-auto\" />\n                    <CardTitle>Error Loading Test</CardTitle>\n                </CardHeader>\n                <CardContent className=\"p-6 text-center\">\n                    <p className=\"text-destructive\">Could not load the test questions or configuration.</p>\n                    <p className=\"text-muted-foreground text-sm mt-2\">Please return to the configuration page and ensure a valid question file is uploaded.</p>\n                    <Button onClick={() => router.push('/configure')} className=\"mt-4\">\n                        Go to Configuration\n                    </Button>\n                </CardContent>\n            </Card>\n        );\n    }\n\n\n  // Reviewing State\n  if (testState === 'reviewing') {\n    const reviewQuestion = incorrectAnswers[reviewIndex];\n     if (!reviewQuestion) {\n        // This case should ideally not be reached if incorrectAnswers > 0\n        console.error(\"Review state error: No review question found at index\", reviewIndex);\n         toast({ title: \"Review Error\", description: \"Could not display the question for review.\", variant: \"destructive\"});\n        router.push('/configure'); // Navigate away safely\n        return <p>Error loading review question.</p>;\n     }\n\n    const originalQuestionIndex = questions.findIndex(q => q.id === reviewQuestion.id);\n\n    return (\n      <Card className=\"w-full max-w-2xl shadow-lg border border-primary/50 animate-pulse-slow\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n              <BookOpen className=\"w-6 h-6 text-primary\" />\n              <span>Reviewing Incorrect Answer ({reviewIndex + 1}/{incorrectAnswers.length})</span>\n          </CardTitle>\n           <CardDescription>Focus on this question. It will change automatically every 15 seconds.</CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <p className=\"font-semibold text-lg\">{reviewQuestion.questionText}</p>\n           {reviewQuestion.options.map((option, index) => (\n            <div key={index} className={`flex items-center justify-between space-x-2 p-3 rounded border ${\n                 option === reviewQuestion.correctAnswer\n                    ? 'bg-accent/10 border-accent/30' // Highlight correct answer subtly\n                    : reviewQuestion.userAnswer === option // Use the stored user answer\n                    ? 'bg-destructive/10 border-destructive/30' // Highlight user's incorrect answer\n                    : 'bg-muted/30 border-transparent'\n            }`}>\n               <span className={`font-medium ${option === reviewQuestion.correctAnswer ? 'text-accent' : ''}`}>\n                   {option}\n                </span>\n               <div>\n                 {reviewQuestion.userAnswer === option && <XCircle className=\"w-5 h-5 text-destructive inline-block mr-2\" />}\n                 {option === reviewQuestion.correctAnswer && <CheckCircle className=\"w-5 h-5 text-accent inline-block\" />}\n               </div>\n\n            </div>\n          ))}\n          <div className=\"mt-4 p-4 border rounded bg-muted/50\">\n             <p className=\"font-semibold text-primary\">Explanation:</p>\n             <p className=\"text-sm text-foreground\">\n                 {reviewQuestion.explanation || <span className=\"italic text-muted-foreground\">Explanation not available.</span>}\n             </p>\n          </div>\n        </CardContent>\n         <CardFooter className=\"flex justify-between items-center\">\n            <p className=\"text-xs text-muted-foreground\">Review session: 30 minutes total.</p>\n            <Button variant=\"outline\" size=\"sm\" onClick={() => router.push('/configure')}>End Review Early</Button>\n         </CardFooter>\n      </Card>\n    );\n  }\n\n\n  // Running State (Main Test Interface)\n  return (\n    <Card className=\"w-full max-w-2xl shadow-lg\">\n      <CardHeader>\n        <div className=\"flex flex-wrap justify-between items-center mb-4 gap-y-2\">\n           <CardTitle>Study Session</CardTitle>\n            <div className=\"flex items-center space-x-3 md:space-x-4 text-sm text-muted-foreground\">\n                 <div className=\"flex items-center gap-1\" title=\"Time Remaining\">\n                    <Clock className=\"w-4 h-4\" />\n                    <span>{Math.floor(timeLeft / 60)}:{(timeLeft % 60).toString().padStart(2, '0')}</span>\n                 </div>\n                <div className=\"flex items-center gap-1\" title=\"Question Progress\">\n                    <FileQuestion className=\"w-4 h-4\" />\n                    {/* Ensure we don't show question number > total questions */}\n                    <span>{totalQuestions > 0 ? Math.min(currentQuestionIndex + 1, totalQuestions) : 0} / {totalQuestions}</span>\n                 </div>\n                 <div className=\"flex items-center gap-1\" title=\"Current Score\">\n                    <Percent className=\"w-4 h-4\" />\n                     <span>{scorePercentage}%</span>\n                 </div>\n            </div>\n        </div>\n        {/* Ensure progress doesn't exceed 100 */}\n        <Progress value={totalQuestions > 0 ? Math.min(((currentQuestionIndex + 1) / totalQuestions) * 100, 100) : 0} className=\"w-full\" />\n         {currentQuestion ? (\n            <CardDescription className=\"mt-4 text-lg font-semibold pt-4\">{currentQuestion.questionText}</CardDescription>\n         ) : (\n             <CardDescription className=\"mt-4 text-lg font-semibold pt-4 text-muted-foreground\">Loading question...</CardDescription>\n         ) }\n      </CardHeader>\n      <CardContent>\n         {currentQuestion ? (\n             <RadioGroup\n              key={currentQuestion.id} // Add key to force re-render on question change\n              value={selectedAnswer ?? ''} // Ensure value is controlled, use '' for no selection\n              onValueChange={handleAnswerSelect}\n              className=\"space-y-3\"\n              disabled={showExplanationModal || testState !== 'running'}\n            >\n              {currentQuestion.options.map((option, index) => (\n                <Label\n                    key={index}\n                    htmlFor={`option-${currentQuestion.id}-${index}`}\n                    className={cn(\n                        \"flex items-center space-x-3 p-3 rounded-md border border-input cursor-pointer transition-colors hover:bg-accent/50\",\n                        selectedAnswer === option ? 'bg-primary/10 border-primary ring-1 ring-primary' : 'bg-background',\n                        (showExplanationModal || testState !== 'running') ? 'cursor-not-allowed opacity-70' : ''\n                    )}\n                    >\n                  <RadioGroupItem value={option} id={`option-${currentQuestion.id}-${index}`} disabled={showExplanationModal || testState !== 'running'} />\n                  <span className=\"text-base font-normal flex-1\"> {/* Flex-1 to take available space */}\n                    {option}\n                  </span>\n                   {/* Show smiley/sad emoji based on answer status after submission */}\n                    {answers[currentQuestionIndex] && answers[currentQuestionIndex].answer === option && (\n                        answers[currentQuestionIndex].status === 'correct'\n                        ? <Smile className=\"w-5 h-5 text-accent ml-auto\" />\n                        : <Frown className=\"w-5 h-5 text-destructive ml-auto\" />\n                    )}\n                </Label>\n              ))}\n            </RadioGroup>\n          ) : (\n             testState === 'running' && <p className=\"text-center text-muted-foreground\">Preparing question...</p>\n          )}\n      </CardContent>\n      <CardFooter className=\"flex justify-end\">\n         <Button\n            onClick={handleSubmitAnswer}\n            disabled={!selectedAnswer || showExplanationModal || testState !== 'running'}\n          >\n           {currentQuestionIndex === totalQuestions - 1 ? 'Finish Test' : 'Submit Answer'}\n         </Button>\n      </CardFooter>\n\n        {/* --- Modals --- */}\n\n        {/* Explanation Modal (for incorrect answers) */}\n        <AlertDialog open={showExplanationModal} onOpenChange={setShowExplanationModal}>\n            <AlertDialogContent className=\"bg-background border border-primary shadow-xl min-w-[300px] min-h-[200px]\">\n            <AlertDialogHeader>\n                <AlertDialogTitle className=\"flex items-center gap-2\">\n                    <Frown className=\"w-6 h-6 text-destructive\" />\n                    <span>Incorrect Answer</span>\n                </AlertDialogTitle>\n                <AlertDialogDescription asChild>\n                    <div className=\"space-y-4\">\n                        <p className=\"text-sm\">Let's review why.</p>\n                        <div className=\"p-4 border rounded bg-muted/70 dark:bg-muted/40\">\n                            <p className=\"font-semibold text-primary mb-1\">Explanation:</p>\n                            <p className=\"text-sm text-foreground\">\n                               {currentQuestion?.explanation?.trim() ? currentQuestion.explanation : <span className=\"italic text-muted-foreground\">Explanation not available.</span>}\n                            </p>\n                        </div>\n                         <p className=\"font-semibold\">The correct answer is: <span className=\"text-accent\">{currentQuestion?.correctAnswer}</span></p>\n                     </div>\n                </AlertDialogDescription>\n            </AlertDialogHeader>\n            <AlertDialogFooter>\n                <AlertDialogAction onClick={handleNextQuestion}>\n                    {currentQuestionIndex === totalQuestions - 1 ? 'Show Results' : 'Next Question'}\n                </AlertDialogAction>\n            </AlertDialogFooter>\n            </AlertDialogContent>\n        </AlertDialog>\n\n\n        {/* Result Modal */}\n        <AlertDialog open={showResultModal} onOpenChange={setShowResultModal}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle className=\"flex items-center gap-2 text-xl\">\n               {isPassed ? <Smile className=\"w-7 h-7 text-accent\" /> : <Frown className=\"w-7 h-7 text-destructive\" />}\n              <span>Test Finished!</span>\n            </AlertDialogTitle>\n            <AlertDialogDescription asChild>\n              <div className=\"space-y-3 pt-2\">\n                  <p>Here are your results:</p>\n                  <ul className=\"list-disc list-inside space-y-1 pl-2 text-sm\">\n                    <li>Total Questions: {totalQuestions}</li>\n                    <li>Correct Answers: {correctAnswersCount}</li>\n                    <li>Incorrect Answers: {incorrectAnswers.length}</li>\n                    <li>Your Score: {scorePercentage}%</li>\n                    <li>Passing Score: {config.passingPercentage}%</li>\n                    <li className={`font-bold ${isPassed ? 'text-accent' : 'text-destructive'}`}>\n                      Result: {isPassed ? 'Passed' : 'Failed'}\n                    </li>\n                  </ul>\n                {incorrectAnswers.length > 0 && (\n                    <p className=\"mt-4 text-sm text-muted-foreground\">\n                        {isPassed\n                            ? \"You passed! You can review the questions you got wrong.\" // Modified text for passed state\n                            : \"You didn't pass. You will now review the questions you got wrong for the next 30 minutes.\"\n                        }\n                    </p>\n                )}\n                {incorrectAnswers.length === 0 && (\n                    <p className=\"mt-4 text-sm text-accent\">\n                        Perfect score! Great job!\n                    </p>\n                )}\n              </div>\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n             {/* Offer review if failed OR if passed but there are incorrect answers */}\n             {(incorrectAnswers.length > 0) ? (\n                 <AlertDialogAction onClick={startReview}>\n                     {isPassed ? \"Review Incorrect Answers\" : \"Start Review Session\"}\n                 </AlertDialogAction>\n             ) : null}\n              {/* Always offer to configure new test */}\n             <AlertDialogCancel onClick={() => router.push('/configure')}>Configure New Test</AlertDialogCancel>\n\n\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </Card>\n  );\n}\n\n// Add a simple pulsing animation class if not already present in globals.css\nconst styles = `\n  @keyframes pulse-slow {\n    50% {\n      opacity: 0.7;\n    }\n  }\n  .animate-pulse-slow {\n    animation: pulse-slow 3s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n  }\n`;\n\n// Inject styles - use a more robust method in production if needed\nif (typeof window !== 'undefined') {\n    const styleSheet = document.createElement(\"style\");\n    styleSheet.type = \"text/css\";\n    styleSheet.innerText = styles;\n    document.head.appendChild(styleSheet);\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kOAA0D,wBAAwB;AAElF,8MAAkC,oBAAoB;AACtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAjBA;;;;;;;;;;;;;;;;AAsBO,SAAS;;IACd,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,qBAAkB,AAAD;IACpC,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,eAAY,AAAD;IAC5B,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,gIAAA,CAAA,mBAAgB,AAAD,KAAK,+BAA+B;IACzE,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IAGzB,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjE,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IACpE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA4D,CAAC;IAClG,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,OAAO,KAAK,IAAI,IAAI,8BAA8B;IAC3F,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAa,YAAY,yBAAyB;IAC3F,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAEtE,MAAM,QAAQ,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAqB;IACxC,MAAM,OAAO,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAoB;IAEtC,qCAAqC;IACrC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,qCAAqC;YACrC,IAAI,CAAC,MAAM;gBACP,QAAQ,IAAI,CAAC;gBACb,MAAM;oBAAE,OAAO;oBAA2B,aAAa;oBAAwB,SAAS;gBAAc;gBACtG,OAAO,IAAI,CAAC;gBACZ;YACJ;YACA,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,OAAO,aAAa,IAAI,CAAC,OAAO,iBAAiB,EAAE;gBACrE,QAAQ,IAAI,CAAC;gBACb,MAAM;oBAAE,OAAO;oBAAyB,aAAa;oBAA6C,SAAS;gBAAc;gBACzH,OAAO,IAAI,CAAC;gBACZ;YACJ;YAEA,kDAAkD;YAClD,IAAI,UAAU,MAAM,KAAK,GAAG;gBACxB,QAAQ,IAAI,CAAC;gBACb,MAAM;oBAAE,OAAO;oBAAuB,aAAa;oBAA4D,SAAS;gBAAc;gBACtI,OAAO,IAAI,CAAC;gBACZ,QAAQ,4CAA4C;YACxD;YAEA,uCAAuC;YACvC,YAAY,OAAO,KAAK;YACxB,aAAa,YAAY,0CAA0C;QAErE;kCAAG;QAAC;QAAQ;QAAM;QAAQ;QAAW;KAAM,GAAG,oCAAoC;IAGlF,sBAAsB;IACtB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACN,sCAAsC;YACxC,MAAM;2DAAkB;oBACpB,IAAI;wBACA,MAAM,CAAA,GAAA,yJAAA,CAAA,QAAU,AAAD,KAAK,yCAAyC;wBAC7D,MAAM,OAAO,GAAG,IAAI,8JAAA,CAAA,QAAU,CAAC;4BAC3B,YAAY;gCAAE,MAAM;4BAAO;4BAC3B,UAAU;gCAAE,QAAQ;gCAAO,OAAO;gCAAK,SAAS;gCAAM,SAAS;4BAAI;4BACnE,QAAQ,CAAC,GAAG,0BAA0B;wBAC1C,GAAG,aAAa;wBAEhB,KAAK,OAAO,GAAG,IAAI,wJAAA,CAAA,OAAS;uEAAC,CAAC;gCAC9B,IAAI,MAAM,OAAO,IAAI,cAAc,aAAa,WAAW,GAAG;oCAC1D,MAAM,OAAO,CAAC,oBAAoB,CAAC,MAAM,OAAO,OAAO,yBAAyB;gCACpF;4BACA;sEAAG,MAAM,KAAK,CAAC,IAAI,qBAAqB;wBAExC,gKAAA,CAAA,YAAc,CAAC,KAAK;oBACxB,EAAE,OAAO,OAAO;wBACZ,QAAQ,KAAK,CAAC,+BAA+B;wBAC5C,MAAM;4BAAE,OAAO;4BAAe,aAAa;4BAAqC,SAAQ;wBAAa;oBAC1G;gBACJ;;YAEA,wDAAwD;YACxD,IAAG,cAAc,WAAW;gBACvB;YACL;YAGA,qCAAqC;YACrC;2CAAO;oBACL,KAAK,OAAO,EAAE;oBACd,KAAK,OAAO,EAAE;oBACd,MAAM,OAAO,EAAE;oBACd,wCAAwC;oBACxC,IAAI,gKAAA,CAAA,YAAc,CAAC,KAAK,KAAK,WAAW;wBACnC,gKAAA,CAAA,YAAc,CAAC,IAAI;wBACnB,gKAAA,CAAA,YAAc,CAAC,MAAM,IAAI,6BAA6B;oBAC3D;gBACH;;QACF,uDAAuD;QACvD;kCAAG;QAAC;KAAU,GAAG,sDAAsD;IAGvE,4BAA4B;IAC5B,MAAM,kBAAkB,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;kDAAE,IAAM,SAAS,CAAC,qBAAqB;iDAAE;QAAC;QAAW;KAAqB;IACxG,MAAM,iBAAiB,UAAU,MAAM,EAAE,yCAAyC;IAElF,MAAM,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,GAAG,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;iCAAE;YACtD,IAAI,UAAU;YACd,MAAM,YAAoD,EAAE;YAE5D,UAAU,OAAO;yCAAC,CAAC,GAAG;oBAClB,MAAM,aAAa,OAAO,CAAC,MAAM;oBACjC,IAAI,YAAY;wBACZ,IAAI,WAAW,MAAM,KAAK,WAAW;4BACjC;wBACJ,OAAO,IAAI,WAAW,MAAM,KAAK,aAAa;4BAC1C,UAAU,IAAI,CAAC;gCAAE,GAAG,CAAC;gCAAE,YAAY,WAAW,MAAM;4BAAC;wBACzD;oBACJ;gBACA,oFAAoF;gBACxF;;YACA,OAAO;gBAAE,qBAAqB;gBAAS,kBAAkB;YAAU;QACvE;gCAAG;QAAC;QAAS;KAAU;IAGvB,MAAM,kBAAkB,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;kDAAE;YAC5B,6DAA6D;YAC7D,OAAO,iBAAiB,IAAI,KAAK,KAAK,CAAC,AAAC,sBAAsB,iBAAkB,OAAO;QAC3F;iDAAG;QAAC;QAAqB;KAAe;IAGxC,6EAA6E;IAC5E,MAAM,aAAa,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;iDAAE;YAC7B,QAAQ,GAAG,CAAC,6CAA6C;YACzD,IAAI,cAAc,WAAW,QAAQ,4BAA4B;YAEjE,QAAQ,GAAG,CAAC;YACZ,aAAa;YACb,MAAM,uBAAuB,iBAAiB,IAAI,KAAK,KAAK,CAAC,AAAC,sBAAsB,iBAAkB,OAAO;YAC7G,MAAM,SAAS,wBAAwB,OAAO,iBAAiB;YAC/D,YAAY;YACZ,mBAAmB;YAClB,yDAAyD;YAC1D,KAAK,OAAO,EAAE;YACd,gKAAA,CAAA,YAAc,CAAC,KAAK;QACtB;gDAAG;QAAC;QAAW;QAAqB;QAAgB,OAAO,iBAAiB;KAAC;IAG9E,sBAAsB;IACtB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,IAAI,cAAc,aAAa,YAAY,KAAK,UAAU,MAAM,KAAK,GAAG;YAExE,MAAM,UAAU;mDAAY;oBAC1B;2DAAY,CAAC;4BACT,MAAM,UAAU,WAAW;4BAC3B,IAAI,WAAW,GAAG;gCACd,cAAc,UAAU,oCAAoC;gCAC5D,qEAAqE;gCACrE,IAAI,cAAc,WAAW;oCACzB;gCACJ;gCACA,OAAO;4BACX;4BACA,OAAO;wBACX;;gBACF;kDAAG;YAEH;2CAAO,IAAM,cAAc;;QAC7B;kCAAG;QAAC;QAAW;QAAU,UAAU,MAAM;QAAE;KAAW,GAAG,eAAe;IAGxE,yBAAyB;IACzB,MAAM,qBAAqB,CAAC;QAC1B,kBAAkB;IACpB;IAEA,MAAM,qBAAqB;QACzB,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,cAAc,WAAW;QAEpE,MAAM,YAAY,mBAAmB,gBAAgB,aAAa;QAClE,MAAM,SAAuB,YAAY,YAAY;QAErD,WAAW,CAAA,OAAQ,CAAC;gBAClB,GAAG,IAAI;gBACP,CAAC,qBAAqB,EAAE;oBAAE,QAAQ;oBAAgB,QAAQ;gBAAO;YACnE,CAAC;QAED,kBAAkB,OAAO,oCAAoC;QAE7D,IAAI,CAAC,WAAW;YACb,wBAAwB,OAAO,+CAA+C;QACjF,OAAO;YACL,8CAA8C;YAC7C,IAAI,uBAAuB,iBAAiB,GAAG;gBAC7C,wBAAwB,CAAA,OAAQ,OAAO;YACzC,OAAO;gBACL;YACF;QACH;IACF;IAEA,MAAM,qBAAqB;QACxB,wBAAwB,QAAQ,0BAA0B;QAC1D,IAAI,uBAAuB,iBAAiB,GAAG;YAC5C,wBAAwB,CAAA,OAAQ,OAAO;QACzC,OAAO;YACL,cAAc,qCAAqC;QACrD;IACJ;IAEC,MAAM,cAAc;QAClB,mBAAmB;QACnB,IAAI,iBAAiB,MAAM,GAAG,GAAG;YAC/B,aAAa;YACb,eAAe;YACf,mBAAmB,KAAK,GAAG;QAC7B,OAAO;YACJ,0DAA0D;YAC1D,MAAM;gBAAE,OAAO;gBAAc,aAAa;gBAA8C,UAAU;YAAI;YACtG,OAAO,IAAI,CAAC;QACf;IACF;IAEC,uBAAuB;IACxB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACT,IAAI,cAAc,eAAe,CAAC,mBAAmB,iBAAiB,MAAM,KAAK,GAAG;YAEpF,MAAM,iBAAiB,KAAK,KAAK,MAAM,6BAA6B;YACpE,MAAM,iBAAiB,OAAO,oCAAoC;YAElE,MAAM,UAAU;mDAAY;oBAC1B,MAAM,cAAc,KAAK,GAAG,KAAK;oBACjC,IAAI,eAAe,gBAAgB;wBACjC,aAAa,aAAa,2BAA2B;wBACrD,MAAM;4BAAC,OAAO;4BAAmB,aAAa;wBAA0B;wBACxE,OAAO,IAAI,CAAC,eAAe,wBAAwB;oBACrD,OAAO;wBACL,oCAAoC;wBACpC;+DAAe,CAAA,OAAQ,CAAC,OAAO,CAAC,IAAI,iBAAiB,MAAM;;oBAC7D;gBACF;kDAAG;YAEH;2CAAO,IAAM,cAAc;;QAC7B;kCAAG;QAAC;QAAW;QAAiB;QAAkB;QAAQ;KAAM;IAGhE,0BAA0B;IAEzB,gBAAgB;IAChB,IAAI,cAAc,WAAW;QACzB,qBACI,6LAAC,mIAAA,CAAA,OAAI;YAAC,WAAU;sBACZ,cAAA,6LAAC,mIAAA,CAAA,cAAW;gBAAC,WAAU;;kCAClB,6LAAC,oNAAA,CAAA,UAAO;wBAAC,WAAU;;;;;;kCACpB,6LAAC;wBAAE,WAAU;kCAAwB;;;;;;;;;;;;;;;;;IAIrD;IAEA,oFAAoF;IACpF,IAAI,cAAc,SAAS;QACtB,qBACI,6LAAC,mIAAA,CAAA,OAAI;YAAC,WAAU;;8BACZ,6LAAC,mIAAA,CAAA,aAAU;oBAAC,WAAU;;sCAClB,6LAAC,2NAAA,CAAA,gBAAa;4BAAC,WAAU;;;;;;sCACzB,6LAAC,mIAAA,CAAA,YAAS;sCAAC;;;;;;;;;;;;8BAEf,6LAAC,mIAAA,CAAA,cAAW;oBAAC,WAAU;;sCACnB,6LAAC;4BAAE,WAAU;sCAAmB;;;;;;sCAChC,6LAAC;4BAAE,WAAU;sCAAqC;;;;;;sCAClD,6LAAC,qIAAA,CAAA,SAAM;4BAAC,SAAS,IAAM,OAAO,IAAI,CAAC;4BAAe,WAAU;sCAAO;;;;;;;;;;;;;;;;;;IAMnF;IAGF,kBAAkB;IAClB,IAAI,cAAc,aAAa;QAC7B,MAAM,iBAAiB,gBAAgB,CAAC,YAAY;QACnD,IAAI,CAAC,gBAAgB;YAClB,kEAAkE;YAClE,QAAQ,KAAK,CAAC,yDAAyD;YACtE,MAAM;gBAAE,OAAO;gBAAgB,aAAa;gBAA8C,SAAS;YAAa;YACjH,OAAO,IAAI,CAAC,eAAe,uBAAuB;YAClD,qBAAO,6LAAC;0BAAE;;;;;;QACb;QAED,MAAM,wBAAwB,UAAU,SAAS,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,eAAe,EAAE;QAEjF,qBACE,6LAAC,mIAAA,CAAA,OAAI;YAAC,WAAU;;8BACd,6LAAC,mIAAA,CAAA,aAAU;;sCACT,6LAAC,mIAAA,CAAA,YAAS;4BAAC,WAAU;;8CACjB,6LAAC,iNAAA,CAAA,WAAQ;oCAAC,WAAU;;;;;;8CACpB,6LAAC;;wCAAK;wCAA6B,cAAc;wCAAE;wCAAE,iBAAiB,MAAM;wCAAC;;;;;;;;;;;;;sCAEhF,6LAAC,mIAAA,CAAA,kBAAe;sCAAC;;;;;;;;;;;;8BAEpB,6LAAC,mIAAA,CAAA,cAAW;oBAAC,WAAU;;sCACrB,6LAAC;4BAAE,WAAU;sCAAyB,eAAe,YAAY;;;;;;wBAC/D,eAAe,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,sBACpC,6LAAC;gCAAgB,WAAW,CAAC,+DAA+D,EACvF,WAAW,eAAe,aAAa,GAClC,gCAAgC,kCAAkC;mCAClE,eAAe,UAAU,KAAK,OAAO,6BAA6B;mCAClE,0CAA0C,oCAAoC;mCAC9E,kCACR;;kDACC,6LAAC;wCAAK,WAAW,CAAC,YAAY,EAAE,WAAW,eAAe,aAAa,GAAG,gBAAgB,IAAI;kDACzF;;;;;;kDAEL,6LAAC;;4CACE,eAAe,UAAU,KAAK,wBAAU,6LAAC,+MAAA,CAAA,UAAO;gDAAC,WAAU;;;;;;4CAC3D,WAAW,eAAe,aAAa,kBAAI,6LAAC,8NAAA,CAAA,cAAW;gDAAC,WAAU;;;;;;;;;;;;;+BAZ9D;;;;;sCAiBZ,6LAAC;4BAAI,WAAU;;8CACZ,6LAAC;oCAAE,WAAU;8CAA6B;;;;;;8CAC1C,6LAAC;oCAAE,WAAU;8CACR,eAAe,WAAW,kBAAI,6LAAC;wCAAK,WAAU;kDAA+B;;;;;;;;;;;;;;;;;;;;;;;8BAItF,6LAAC,mIAAA,CAAA,aAAU;oBAAC,WAAU;;sCACnB,6LAAC;4BAAE,WAAU;sCAAgC;;;;;;sCAC7C,6LAAC,qIAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAU,MAAK;4BAAK,SAAS,IAAM,OAAO,IAAI,CAAC;sCAAe;;;;;;;;;;;;;;;;;;IAIxF;IAGA,sCAAsC;IACtC,qBACE,6LAAC,mIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,6LAAC,mIAAA,CAAA,aAAU;;kCACT,6LAAC;wBAAI,WAAU;;0CACZ,6LAAC,mIAAA,CAAA,YAAS;0CAAC;;;;;;0CACV,6LAAC;gCAAI,WAAU;;kDACV,6LAAC;wCAAI,WAAU;wCAA0B,OAAM;;0DAC5C,6LAAC,uMAAA,CAAA,QAAK;gDAAC,WAAU;;;;;;0DACjB,6LAAC;;oDAAM,KAAK,KAAK,CAAC,WAAW;oDAAI;oDAAE,CAAC,WAAW,EAAE,EAAE,QAAQ,GAAG,QAAQ,CAAC,GAAG;;;;;;;;;;;;;kDAE9E,6LAAC;wCAAI,WAAU;wCAA0B,OAAM;;0DAC3C,6LAAC,yNAAA,CAAA,eAAY;gDAAC,WAAU;;;;;;0DAExB,6LAAC;;oDAAM,iBAAiB,IAAI,KAAK,GAAG,CAAC,uBAAuB,GAAG,kBAAkB;oDAAE;oDAAI;;;;;;;;;;;;;kDAE1F,6LAAC;wCAAI,WAAU;wCAA0B,OAAM;;0DAC5C,6LAAC,2MAAA,CAAA,UAAO;gDAAC,WAAU;;;;;;0DAClB,6LAAC;;oDAAM;oDAAgB;;;;;;;;;;;;;;;;;;;;;;;;;kCAKpC,6LAAC,uIAAA,CAAA,WAAQ;wBAAC,OAAO,iBAAiB,IAAI,KAAK,GAAG,CAAC,AAAC,CAAC,uBAAuB,CAAC,IAAI,iBAAkB,KAAK,OAAO;wBAAG,WAAU;;;;;;oBACtH,gCACE,6LAAC,mIAAA,CAAA,kBAAe;wBAAC,WAAU;kCAAmC,gBAAgB,YAAY;;;;;6CAEzF,6LAAC,mIAAA,CAAA,kBAAe;wBAAC,WAAU;kCAAwD;;;;;;;;;;;;0BAG1F,6LAAC,mIAAA,CAAA,cAAW;0BACR,gCACG,6LAAC,6IAAA,CAAA,aAAU;oBAEV,OAAO,kBAAkB;oBACzB,eAAe;oBACf,WAAU;oBACV,UAAU,wBAAwB,cAAc;8BAE/C,gBAAgB,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,sBACpC,6LAAC,oIAAA,CAAA,QAAK;4BAEF,SAAS,CAAC,OAAO,EAAE,gBAAgB,EAAE,CAAC,CAAC,EAAE,OAAO;4BAChD,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACR,sHACA,mBAAmB,SAAS,qDAAqD,iBACjF,AAAC,wBAAwB,cAAc,YAAa,kCAAkC;;8CAG5F,6LAAC,6IAAA,CAAA,iBAAc;oCAAC,OAAO;oCAAQ,IAAI,CAAC,OAAO,EAAE,gBAAgB,EAAE,CAAC,CAAC,EAAE,OAAO;oCAAE,UAAU,wBAAwB,cAAc;;;;;;8CAC5H,6LAAC;oCAAK,WAAU;;wCAA+B;wCAC5C;;;;;;;gCAGA,OAAO,CAAC,qBAAqB,IAAI,OAAO,CAAC,qBAAqB,CAAC,MAAM,KAAK,UAAU,CACjF,OAAO,CAAC,qBAAqB,CAAC,MAAM,KAAK,0BACvC,6LAAC,uMAAA,CAAA,QAAK;oCAAC,WAAU;;;;;yDACjB,6LAAC,uMAAA,CAAA,QAAK;oCAAC,WAAU;;;;;wCACvB;;2BAjBK;;;;;mBARN,gBAAgB,EAAE;;;;2BA8BxB,cAAc,2BAAa,6LAAC;oBAAE,WAAU;8BAAoC;;;;;;;;;;;0BAGnF,6LAAC,mIAAA,CAAA,aAAU;gBAAC,WAAU;0BACnB,cAAA,6LAAC,qIAAA,CAAA,SAAM;oBACJ,SAAS;oBACT,UAAU,CAAC,kBAAkB,wBAAwB,cAAc;8BAEnE,yBAAyB,iBAAiB,IAAI,gBAAgB;;;;;;;;;;;0BAOlE,6LAAC,8IAAA,CAAA,cAAW;gBAAC,MAAM;gBAAsB,cAAc;0BACnD,cAAA,6LAAC,8IAAA,CAAA,qBAAkB;oBAAC,WAAU;;sCAC9B,6LAAC,8IAAA,CAAA,oBAAiB;;8CACd,6LAAC,8IAAA,CAAA,mBAAgB;oCAAC,WAAU;;sDACxB,6LAAC,uMAAA,CAAA,QAAK;4CAAC,WAAU;;;;;;sDACjB,6LAAC;sDAAK;;;;;;;;;;;;8CAEV,6LAAC,8IAAA,CAAA,yBAAsB;oCAAC,OAAO;8CAC3B,cAAA,6LAAC;wCAAI,WAAU;;0DACX,6LAAC;gDAAE,WAAU;0DAAU;;;;;;0DACvB,6LAAC;gDAAI,WAAU;;kEACX,6LAAC;wDAAE,WAAU;kEAAkC;;;;;;kEAC/C,6LAAC;wDAAE,WAAU;kEACT,iBAAiB,aAAa,SAAS,gBAAgB,WAAW,iBAAG,6LAAC;4DAAK,WAAU;sEAA+B;;;;;;;;;;;;;;;;;0DAG3H,6LAAC;gDAAE,WAAU;;oDAAgB;kEAAuB,6LAAC;wDAAK,WAAU;kEAAe,iBAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAIjH,6LAAC,8IAAA,CAAA,oBAAiB;sCACd,cAAA,6LAAC,8IAAA,CAAA,oBAAiB;gCAAC,SAAS;0CACvB,yBAAyB,iBAAiB,IAAI,iBAAiB;;;;;;;;;;;;;;;;;;;;;;0BAQ5E,6LAAC,8IAAA,CAAA,cAAW;gBAAC,MAAM;gBAAiB,cAAc;0BAClD,cAAA,6LAAC,8IAAA,CAAA,qBAAkB;;sCACjB,6LAAC,8IAAA,CAAA,oBAAiB;;8CAChB,6LAAC,8IAAA,CAAA,mBAAgB;oCAAC,WAAU;;wCACxB,yBAAW,6LAAC,uMAAA,CAAA,QAAK;4CAAC,WAAU;;;;;iEAA2B,6LAAC,uMAAA,CAAA,QAAK;4CAAC,WAAU;;;;;;sDAC1E,6LAAC;sDAAK;;;;;;;;;;;;8CAER,6LAAC,8IAAA,CAAA,yBAAsB;oCAAC,OAAO;8CAC7B,cAAA,6LAAC;wCAAI,WAAU;;0DACX,6LAAC;0DAAE;;;;;;0DACH,6LAAC;gDAAG,WAAU;;kEACZ,6LAAC;;4DAAG;4DAAkB;;;;;;;kEACtB,6LAAC;;4DAAG;4DAAkB;;;;;;;kEACtB,6LAAC;;4DAAG;4DAAoB,iBAAiB,MAAM;;;;;;;kEAC/C,6LAAC;;4DAAG;4DAAa;4DAAgB;;;;;;;kEACjC,6LAAC;;4DAAG;4DAAgB,OAAO,iBAAiB;4DAAC;;;;;;;kEAC7C,6LAAC;wDAAG,WAAW,CAAC,UAAU,EAAE,WAAW,gBAAgB,oBAAoB;;4DAAE;4DAClE,WAAW,WAAW;;;;;;;;;;;;;4CAGpC,iBAAiB,MAAM,GAAG,mBACvB,6LAAC;gDAAE,WAAU;0DACR,WACK,0DAA0D,iCAAiC;mDAC3F;;;;;;4CAIb,iBAAiB,MAAM,KAAK,mBACzB,6LAAC;gDAAE,WAAU;0DAA2B;;;;;;;;;;;;;;;;;;;;;;;sCAOlD,6LAAC,8IAAA,CAAA,oBAAiB;;gCAEb,iBAAiB,MAAM,GAAG,kBACxB,6LAAC,8IAAA,CAAA,oBAAiB;oCAAC,SAAS;8CACvB,WAAW,6BAA6B;;;;;2CAE7C;8CAEJ,6LAAC,8IAAA,CAAA,oBAAiB;oCAAC,SAAS,IAAM,OAAO,IAAI,CAAC;8CAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ1E;GA/egB;;QACC,qIAAA,CAAA,YAAS;QACL,kIAAA,CAAA,qBAAkB;QACpB,4HAAA,CAAA,eAAY;QACP,gIAAA,CAAA,mBAAgB;QACpB,+HAAA,CAAA,WAAQ;;;KALZ;AAifhB,6EAA6E;AAC7E,MAAM,SAAS,CAAC;;;;;;;;;AAShB,CAAC;AAED,mEAAmE;AACnE,wCAAmC;IAC/B,MAAM,aAAa,SAAS,aAAa,CAAC;IAC1C,WAAW,IAAI,GAAG;IAClB,WAAW,SAAS,GAAG;IACvB,SAAS,IAAI,CAAC,WAAW,CAAC;AAC9B","debugId":null}}]
}